int NT=100;
int C1=1, C2=2, C3=3, C4=4, C5=1;
border Ra1(t=0., 1.){x=1.; y=t; label=C1;}
border Ra2(t=0., 1.){x=t; y=1.; label=C2;}
border Ra3(t=0., 1.){x=0.; y=t; label=C3;}
border Ra4(t=0., 1.){x=t; y=0.; label=C4;}
border Circle(t=0., 2.*pi){x=0.3*cos(t)+0.5; y=0.3*sin(t)+0.5; label=C5;}

mesh Th;
Th=buildmesh(Ra1(NT)+Ra2(-NT)+Ra3(-NT)+Ra4(NT)+Circle(-NT));
//plot(Th);

fespace Vht(Th, P1);
Vht u, v, w;

//Function
func real FuncA(real x, real y){
	return 0;
}

func real FuncB(real x, real y){
	return sin(pi*x)*sin(pi*y);
}

func real Func1(real x, real y){
	return -pi*sin(pi*y);
}

func real Func2(real x, real y){
	return -pi*sin(pi*x);
}

func real Func3(real x, real y){
	return pi*sin(pi*y);
}

func real Func4(real x, real y){
	return pi*sin(pi*x);
}

//solve
solve dpt(u, v)=int2d(Th)(-dx(u)*dx(v)-dy(u)*dy(v)+2.*pi^2*u*v)
				-int2d(Th)(FuncA(x, y)*v)
				+on(C5, u=FuncB(x,y))
				+int1d(Th, C1)(Func1(x, y)*v)
                +int1d(Th, C2)(Func2(x, y)*v)
				+int1d(Th, C3)(Func3(x, y)*v)
                +int1d(Th, C4)(Func4(x, y)*v);
				
//plot(u);


//plot
func real ExacU(real x, real y){
	return sin(pi*x)*sin(pi*y);
}
v=ExacU(x, y);

w=u-v;
plot(w);

//errL2
real errL2;
errL2=sqrt(int2d(Th)(w*w));

cout<<"Err in L2 norm: "<<errL2<<endl;
cout<<w(0.1, 0.5)<<endl;
cout<<w(0.9, 0.5)<<endl;

